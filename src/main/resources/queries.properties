select_groups = select * from groups
select_group = select * from groups where group_id=?
select_students = select * from students where group_id=?
select_student = select * from students where student_id=?
insert_group = insert into groups (group_number, year) values (?, ?)
insert_student = insert into students (group_id, student_name, student_surname) values (?, ?, ?)
insert_task = insert into tasks (is_completed, student_id) values (?, ?)
delete_group = delete from groups where group_id=?
delete_student = delete from students where student_id=?

create_database = CREATE DATABASE informatics \
WITH \
OWNER = postgres \
ENCODING = 'UTF8'\
LC_COLLATE = 'C'\
LC_CTYPE = 'C'\
TABLESPACE = pg_default\
CONNECTION LIMIT = -1;

create_groups = CREATE TABLE public.groups\
(\
group_id integer NOT NULL DEFAULT nextval('groups_group_id_seq'::regclass),\
group_number integer,\
year integer,\
CONSTRAINT groups_pkey PRIMARY KEY (group_id)\
)

create_students = CREATE TABLE public.students\
(\
student_id integer NOT NULL DEFAULT nextval('students_student_id_seq'::regclass),\
group_id bigint NOT NULL,\
student_name character varying(50) COLLATE pg_catalog."default" NOT NULL,\
student_surname character varying(50) COLLATE pg_catalog."default" NOT NULL,\
CONSTRAINT students_pkey PRIMARY KEY (student_id),\
CONSTRAINT students_group_id_fkey FOREIGN KEY (group_id)\
REFERENCES public.groups (group_id) MATCH SIMPLE\
ON UPDATE CASCADE\
ON DELETE CASCADE\
)

create_tasks = CREATE TABLE public.tasks\
(\
task_id integer NOT NULL DEFAULT nextval('tasks_task_id_seq'::regclass),\
is_completed boolean NOT NULL,\
student_id bigint NOT NULL,\
CONSTRAINT tasks_pkey PRIMARY KEY (task_id),\
CONSTRAINT tasks_student_id_fkey FOREIGN KEY (student_id)\
REFERENCES public.students (student_id) MATCH SIMPLE\
ON UPDATE CASCADE\
ON DELETE CASCADE\
)